<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>南院大王</title>
  
  <subtitle>十年饮冰，难凉热血。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://itnote.tech/"/>
  <updated>2019-08-12T01:28:26.118Z</updated>
  <id>http://itnote.tech/</id>
  
  <author>
    <name>Shawn Peng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在云服务器上搭建Hexo博客</title>
    <link href="http://itnote.tech/2019/08/10/%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://itnote.tech/2019/08/10/在云服务器上搭建Hexo博客/</id>
    <published>2019-08-10T08:49:00.000Z</published>
    <updated>2019-08-12T01:28:26.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近搭建一个自己的博客，历时一个星期的空余时间。搭建博客的主要目的是想记录自己的技术笔记和心得，方便与人分享和自己查阅。很久以前我就有搭建博客的想法，但是没有实践，一个是懒，一个是没有找到合适的博客系统。后来发现<code>Hexo</code>这个博客系统，感觉不错，但是看了一些教程，感觉搭建起来很麻烦，我就又放弃了，最近在朋友的鼓励下，终于把想法实践了。</p><p>在搭建博客之前，我对比了自己知道两个博客系统，<code>WordPress</code>和<code>Hexo</code>。</p><table><thead><tr><th><strong>WordPress:</strong></th><th align="left"></th></tr></thead><tbody><tr><td><strong>优点</strong></td><td align="left"><strong>缺点</strong></td></tr><tr><td>容易搭建，上手快</td><td align="left">臃肿不轻便</td></tr><tr><td>主题多</td><td align="left">需要提供服务器和域名</td></tr><tr><td>插件多</td><td align="left"></td></tr></tbody></table><table><thead><tr><th><strong>Hexo:</strong></th><th align="left"></th></tr></thead><tbody><tr><td><strong>优点</strong></td><td align="left"><strong>缺点</strong></td></tr><tr><td>轻便：全是静态文件</td><td align="left">只能在本地电脑工作</td></tr><tr><td>简洁：天然支持MarkDown</td><td align="left">维护不便</td></tr><tr><td>免费：GitHub</td><td align="left"></td></tr></tbody></table><p>先前搭建过<code>WordPress</code>, 我并不是很喜欢<code>WordPress</code>的主题风格，个人认为不太适合写技术博客，找了些主题后，没有发现自己喜欢的。看到一些技术大佬很多在用<code>Hexo</code>的博客，并且对比了优缺点，最终决定搭建基于<code>Hexo</code>的博客。根据<code>Hexo</code>的缺点，我萌生了一个想法：能不能将Hexo搭建在云服务上？找了相关资料，确实有人这么做。本片博客主要解决了以下几个问题。</p><ol><li>在云服务器上搭建<code>Hexo</code>博客系统</li><li>在线编辑和发布博客</li><li>配置Https</li></ol><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="服务器和域名"><a href="#服务器和域名" class="headerlink" title="服务器和域名"></a>服务器和域名</h2><p>服务器是在<code>阿里云</code>上买的最低配置的香港服务器，因为香港服务器不需要备案就能直接访问，同时速度也不会太差。同时域名也是在<code>阿里云</code>上购买的。</p><h3 id="服务器版本"><a href="#服务器版本" class="headerlink" title="服务器版本"></a>服务器版本</h3><p>CentOS 7.4</p><h2 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h2><p>Hexo的搭建过程网上有太多，没必要重复造轮子，没搭建过的朋友可以参考<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D" target="_blank" rel="noopener">这篇博文</a>。</p><p>我的博客用的主题是<a href="https://github.com/yscoder/hexo-theme-indigo/wiki" target="_blank" rel="noopener">Indigo</a>,其中不少问题都可以在WiKi中找到。</p><h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><p>在搭建完成之后，服务器的运行需要依赖于<code>hexo-server</code>和<code>hexo-admin</code>。如果已经安装，可以跳过此步骤。</p><p>cd到博客根目录下，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server@0.3.1 --save</span><br><span class="line">npm install hexo-admin@2.3.0 --save</span><br></pre></td></tr></table></figure><p>安装完毕之后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，访问<a href="http://yourServerIP:4000" target="_blank" rel="noopener">http://yourServerIP:4000</a>, 即可预览，访问<a href="http://yourServerIP:4000/admin" target="_blank" rel="noopener">http://yourServerIP:4000/admin</a>, 即可进入<code>hexo-admin</code>后台管理界面。</p><p>hexo-admin默认是没有密码保护，需要自己手动开启。在进入后台管理页面时，点击<code>Settings--Setup authentification here</code>设置后台管理密码。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pasted-6.png" alt="Setting" title>                </div>                <div class="image-caption">Setting</div>            </figure><p>输入用户名密码之后，将生成的代码复制。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pasted-9.png" alt="Admin Config Section" title>                </div>                <div class="image-caption">Admin Config Section</div>            </figure><p>然后打开博客根目录下的<code>_config.yml</code>，将复制的代码粘贴到末尾。<br>重启hexo服务器，进入<a href="http://yourServerIP:4000/admin" target="_blank" rel="noopener">http://yourServerIP:4000/admin</a>, 如果出现登录界面，则设置成功。</p><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><p>因为shell关掉或者使用<code>ctrl+c</code>关闭，则会导致服务器结束进程。所以我写了个JS脚本，执行之后，后台会一直运行hexo服务器。<br>安装pm2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm  install -g pm2</span><br></pre></td></tr></table></figure><p>在博客根目录下创建一个hexo_run.js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">'child_process'</span>)</span><br><span class="line">exec(<span class="string">'hexo server'</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'exec error: $&#123;error&#125;'</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在根目录下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start hexo_run.js</span><br></pre></td></tr></table></figure><p>这样hexo服务器就能一直在后台运行不会被杀死。</p><h2 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h2><p>每次都用通过指令来部署，那是相当难受的。不过<code>hexo-admin</code>提供了一键部署功能：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pasted-11.png" alt="Deploy" title>                </div>                <div class="image-caption">Deploy</div>            </figure><p>通过点击<code>Deploy</code>按钮就能执行你的部署脚本。在博客根目录下添加配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">deployCommand: &apos;./hexo-deploy.sh&apos;</span><br></pre></td></tr></table></figure><p>并且在根目录下创建<code>hexo-deploy.sh</code>，并编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>给hexo-deploy.sh授予权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x hexo-deploy.sh</span><br></pre></td></tr></table></figure><p>重启服务器之后，编辑博文后点击Deploy按钮就能将文章渲染成html页面访问了。</p><h2 id="与Github-Page同步"><a href="#与Github-Page同步" class="headerlink" title="与Github Page同步"></a>与Github Page同步</h2><p>GitHub的配置可以参考前文中所提到的博客搭建文章，里面有详细的配置过程。如果需要与Github page同步，则修改<code>hexo-deploy.sh</code>就可以了。<br>修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>然后重启服务器，点击Deploy按钮即可，之后的改动都会同步到Github上。</p><h1 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h1><h2 id="DNS解析配置"><a href="#DNS解析配置" class="headerlink" title="DNS解析配置"></a>DNS解析配置</h2><p>进入域名的DNS解析中，按如下配置即可：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pasted-13.png" alt="DNS解析" title>                </div>                <div class="image-caption">DNS解析</div>            </figure><p>然后访问你的域名，查看是否能访问到博客页面。</p><h2 id="配置Https"><a href="#配置Https" class="headerlink" title="配置Https"></a>配置Https</h2><p>关于Https的配置，可以参考<a href="https://www.jianshu.com/p/8046a12fec4a" target="_blank" rel="noopener">这篇博文</a>。<br>需要在阿里云购买云盾证书，并添加解析。在下载完证书之后需要在<code>nginx.conf</code>中配置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  www.itnote.tech;</span><br><span class="line">     return 301 https://www.itnote.tech$request_uri;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.itnote.tech;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate      /usr/local/nginx/cert/pem_file.pem; #证书地址</span><br><span class="line">    ssl_certificate_key   /usr/local/nginx/cert/key_file.key; #证书地址</span><br><span class="line">    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         proxy_pass         http://localhost:4000/;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>保存后重启nginx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><p>看上图中有锁状的地址即配置成功。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pasted-15.png" alt="Https Cert" title>                </div>                <div class="image-caption">Https Cert</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近搭建一个自己的博客，历时一个星期的空余时间。搭建博客的主要目的是想记录自己的技术笔记和心得，方便与人分享和自己查阅。很久以前我就有搭建博
      
    
    </summary>
    
    
      <category term="博客" scheme="http://itnote.tech/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://itnote.tech/tags/Hexo/"/>
    
      <category term="Https" scheme="http://itnote.tech/tags/Https/"/>
    
      <category term="WordPress" scheme="http://itnote.tech/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://itnote.tech/2019/08/10/hello-world/"/>
    <id>http://itnote.tech/2019/08/10/hello-world/</id>
    <published>2019-08-10T08:12:41.000Z</published>
    <updated>2019-08-10T08:12:56.906Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
